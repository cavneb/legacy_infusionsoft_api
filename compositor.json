{
  "name": "cavneb/legacy_infusionsoft_api",
  "version": "0.1.4",
  "libraries": {
    "xv": "^1.1.25"
  },
  "title": "Infusionsoft API",
  "branch": "master",
  "style": {
    "name": "Future",
    "componentSet": {
      "nav": "nav/BasicNav",
      "header": "header/BannerHeader",
      "article": "article/BasicArticle",
      "footer": "footer/BasicFooter"
    },
    "fontFamily": "\"Avenir Next\", Helvetica, sans-serif",
    "heading": {
      "fontWeight": 500,
      "textTransform": "uppercase",
      "letterSpacing": "0.2em"
    },
    "alternativeText": {
      "textTransform": "uppercase",
      "fontWeight": 400,
      "letterSpacing": "0.2em",
      "opacity": 0.75
    },
    "colors": {
      "text": "#333",
      "background": "#fff",
      "primary": "#666",
      "secondary": "#888",
      "highlight": "#1f80ff",
      "muted": "#f6f6f6",
      "border": "#eee"
    },
    "layout": {
      "centered": true,
      "maxWidth": 1024,
      "bannerHeight": "80vh"
    }
  },
  "content": [
    {
      "component": "nav",
      "links": [
        {
          "href": "https://github.com/cavneb/legacy_infusionsoft_api",
          "text": "GitHub"
        }
      ]
    },
    {
      "component": "header",
      "heading": "legacy_infusionsoft_api",
      "subhead": "Ruby client for Legacy XML-RPC Infusionsoft API",
      "children": [
        {
          "component": "ui/TweetButton",
          "text": "legacy_infusionsoft_api: Ruby client for Legacy XML-RPC Infusionsoft API",
          "url": null
        },
        {
          "component": "ui/GithubButton",
          "user": "cavneb",
          "repo": "legacy_infusionsoft_api"
        }
      ]
    },
    {
      "component": "article",
      "metadata": {
        "source": "github.readme"
      },
      "html": "<h1>Ruby client for Legacy XML-RPC Infusionsoft Api</h1>\n<p><a href=\"https://badge.fury.io/rb/legacy_infusionsoft_api\"><img src=\"https://badge.fury.io/rb/legacy_infusionsoft_api.svg\"></a></p>\n<p><a href=\"https://staging.codesponsor.io/link/Z24Ypyn8iC1Q4i6uCwNyLW3r/cavneb/legacy_infusionsoft_api\"><img src=\"https://staging.codesponsor.io/embed/Z24Ypyn8iC1Q4i6uCwNyLW3r/cavneb/legacy_infusionsoft_api.svg\"></a></p>\n<p><a href=\"https://github.com/cavneb/legacy_infusionsoft_api\">Legacy Infusionsoft Api</a> is an interface for accessing <a href=\"http://help.infusionsoft.com/developers/api-basics\">Infusionsoft&apos;s</a> API.</p>\n<p>It&apos;s based on the <a href=\"https://github.com/davidlumley/myob-api\">MYOB Api</a> gem and the <a href=\"https://github.com/davidlumley/infusionsoft-api\">Infusionsoft API</a> gem.</p>\n<h2>Installation</h2>\n<p>Add this line to your application&apos;s Gemfile:</p>\n<pre>gem <span class=\"hljs-string\">&apos;legacy_infusionsoft_api&apos;</span></pre><p>And then execute:</p>\n<pre><span class=\"hljs-variable\">$ </span>bundle</pre><p>Or install it yourself as:</p>\n<pre>$ gem <span class=\"hljs-keyword\">install</span> legacy_infusionsoft_api</pre><h2>Usage</h2>\n<h3>API Client Setup</h3>\n<p>Create an api_client:</p>\n<pre>api_client = <span class=\"hljs-symbol\">LegacyInfusionsoftApi::</span>Client.new({\n<span class=\"hljs-symbol\">  api_key:</span> USERS_API_KEY,\n<span class=\"hljs-symbol\">  app_name:</span> USERS_APP_NAME,\n})</pre><p>The <code>:api_key</code> can be found in Infusionsoft under Admin -&gt; Settings -&gt; Application Setttings (Application). The <code>:app_name</code> is the subdomain of <code>app_name.infusionsoft.com</code>(&apos;app_name&apos;).</p>\n<h3>API Methods</h3>\n<h4>Contacts</h4>\n<p>Return a list of all contacts</p>\n<pre>api_client<span class=\"hljs-selector-class\">.contact</span><span class=\"hljs-selector-class\">.all</span></pre><p>You can get a count of all contacts</p>\n<pre>api_client<span class=\"hljs-selector-class\">.contact</span><span class=\"hljs-selector-class\">.count</span></pre><p>You can execute a block of code while iterating contacts</p>\n<pre>api_client.contact.find_each({}, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-number\">50</span>) <span class=\"hljs-keyword\">do</span> <span class=\"hljs-params\">|contacts|</span>\n  <span class=\"hljs-comment\"># contacts.length === 50</span>\n  contacts.each <span class=\"hljs-keyword\">do</span> <span class=\"hljs-params\">|contact|</span>\n    puts contact[<span class=\"hljs-string\">&apos;Id&apos;</span>]\n  <span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span></pre><p>You can also pass a query hash</p>\n<pre>api_client<span class=\"hljs-selector-class\">.contact</span><span class=\"hljs-selector-class\">.all</span>({\n  :FirstName =&gt; <span class=\"hljs-string\">&apos;David&apos;</span>,\n})</pre><p>You can create contacts too</p>\n<pre>client = api_client.contact.create({\n  :<span class=\"hljs-function\"><span class=\"hljs-params\">FirstName</span> =&gt;</span> <span class=\"hljs-string\">&apos;David&apos;</span>,\n  :<span class=\"hljs-function\"><span class=\"hljs-params\">LastName</span>  =&gt;</span> <span class=\"hljs-string\">&apos;Lumley&apos;</span>,\n  :<span class=\"hljs-function\"><span class=\"hljs-params\">Email</span>     =&gt;</span> <span class=\"hljs-string\">&apos;david@davidlumley.com.au&apos;</span>,\n  :<span class=\"hljs-function\"><span class=\"hljs-params\">Company</span>   =&gt;</span> <span class=\"hljs-string\">&apos;Client Heartbeat&apos;</span>,\n})</pre><p>You can also delete contacts by passing an ID</p>\n<pre>api_client<span class=\"hljs-selector-class\">.contact</span><span class=\"hljs-selector-class\">.delete</span>(<span class=\"hljs-number\">16</span>)</pre><p>Or by passing a query</p>\n<pre>api_client<span class=\"hljs-selector-class\">.contact</span><span class=\"hljs-selector-class\">.delete</span>({\n  :FirstName =&gt; <span class=\"hljs-string\">&apos;Trevor&apos;</span>,\n})</pre><h4>Contact Actions</h4>\n<p>Add a note to a contact</p>\n<pre>api_client<span class=\"hljs-selector-class\">.contact_action</span><span class=\"hljs-selector-class\">.create</span>({\n  <span class=\"hljs-string\">&quot;ContactId&quot;</span> =&gt; <span class=\"hljs-number\">1234</span>,\n  <span class=\"hljs-string\">&quot;CompletionDate&quot;</span> =&gt; Time<span class=\"hljs-selector-class\">.now</span><span class=\"hljs-selector-class\">.utc</span><span class=\"hljs-selector-class\">.strftime</span>(<span class=\"hljs-string\">&quot;%F\\T%T&quot;</span>),\n  <span class=\"hljs-string\">&quot;ActionDescription&quot;</span> =&gt; <span class=\"hljs-string\">&quot;My Note Title&quot;</span>,\n  <span class=\"hljs-string\">&quot;CreationNotes&quot;</span> =&gt; <span class=\"hljs-string\">&quot;My note body&quot;</span>\n})</pre><h4>Contact Groups</h4>\n<p>Return a list of all contact groups</p>\n<pre>api_client<span class=\"hljs-selector-class\">.contact_group_assign</span><span class=\"hljs-selector-class\">.all</span></pre><p>You can also pass a hash query</p>\n<pre>api_client<span class=\"hljs-selector-class\">.contact_group_assign</span><span class=\"hljs-selector-class\">.all</span>({\n  :GroupCategoryId =&gt; <span class=\"hljs-number\">12</span>,\n})</pre><h4>Contact Group Assignments</h4>\n<p>Return a list of all contact group assignments (i.e. contacts with a tag or group)</p>\n<pre>api_client<span class=\"hljs-selector-class\">.contact_group_assign</span><span class=\"hljs-selector-class\">.all</span></pre><p>You can also pass a hash query</p>\n<pre>api_client<span class=\"hljs-selector-class\">.contact_group_assign</span><span class=\"hljs-selector-class\">.all</span>({\n  :ContactGroup =&gt; <span class=\"hljs-string\">&apos;New Customer&apos;</span>,\n})</pre><h4>Contact Group Categories</h4>\n<p>Return a list of all contact group categories</p>\n<pre>api_client<span class=\"hljs-selector-class\">.contact_group_category</span><span class=\"hljs-selector-class\">.all</span></pre><p>You can also pass a hash query</p>\n<pre>api_client<span class=\"hljs-selector-class\">.contact_group_category</span><span class=\"hljs-selector-class\">.all</span>({\n  :CategoryName =&gt; <span class=\"hljs-string\">&apos;Custom Tags&apos;</span>,\n})</pre><h2>Development</h2>\n<p>After checking out the repo, run <code>bin/setup</code> to install dependencies. Then, run <code>rake test</code> to run the tests. You can also run <code>bin/console</code> for an interactive prompt that will allow you to experiment.</p>\n<p>To install this gem onto your local machine, run <code>bundle exec rake install</code>. To release a new version, update the version number in <code>version.rb</code>, and then run <code>bundle exec rake release</code>, which will create a git tag for the version, push git commits and tags, and push the <code>.gem</code> file to <a href=\"https://rubygems.org\">rubygems.org</a>.</p>\n<h2>Contributing</h2>\n<p>Bug reports and pull requests are welcome on GitHub at <a href=\"https://github.com/cavneb/legacy_infusionsoft_api\">https://github.com/cavneb/legacy_infusionsoft_api</a>. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the <a href=\"http://contributor-covenant.org\">Contributor Covenant</a> code of conduct.</p>\n<h2>License</h2>\n<p>The gem is available as open source under the terms of the <a href=\"http://opensource.org/licenses/MIT\">MIT License</a>.</p>\n<h2>Code Sponsors</h2>\n<p>This project is proudly supported by the following code sponsors. [<a href=\"https://codesponsor.io\">Become a Code Sponsor</a>]</p>\n<p><a href=\"https://app.codesponsor.io/_____/sponsor/0/website\" target=\"_blank\"><img src=\"https://codesponsor.io/logos/rollbar.png\"></a>\n<a href=\"https://opencollective.com/_____/sponsor/1/website\" target=\"_blank\"><img src=\"https://codesponsor.io/logos/webstorm.png\"></a>\n<a href=\"https://opencollective.com/_____/sponsor/2/website\" target=\"_blank\"><img src=\"https://codesponsor.io/logos/pusher.png\"></a>\n<a href=\"https://opencollective.com/_____/sponsor/3/website\" target=\"_blank\"><img src=\"https://codesponsor.io/logos/stickermule.png\"></a></p>\n<h2>Code of Conduct</h2>\n<p>Everyone interacting in the LegacyInfusionsoftApi project&#x2019;s codebases, issue trackers, chat rooms and mailing lists is expected to follow the <a href=\"https://github.com/cavneb/legacy_infusionsoft_api/blob/master/CODE_OF_CONDUCT.md\">code of conduct</a>.</p>\n"
    },
    {
      "component": "footer",
      "links": [
        {
          "href": "https://github.com/cavneb/legacy_infusionsoft_api",
          "text": "GitHub"
        },
        {
          "href": "https://github.com/cavneb",
          "text": "cavneb"
        }
      ]
    }
  ]
}